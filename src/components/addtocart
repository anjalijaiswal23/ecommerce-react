// import React, { useState, useEffect } from 'react';
// import { useParams } from 'react-router-dom';
// import './Addtocart.css';

// const AddToCart = () => {
//   const { id, name, price, image } = useParams();



//   // Retrieve cart items from local storage
//   const storedCartItems = JSON.parse(localStorage.getItem('cartItems')) || [];

//   // Combine the stored cart items and the new item into the cart array
//   const cartItem = {
//     id: id,
//     name: name,
//     price: price,
//     image: image,
//     quantity: 1, // Set the initial quantity to 1
//   };

//   // Use useState to manage the updatedCart array
//   const [updatedCart, setUpdatedCart] = useState(() => {
//     let initialCart = storedCartItems.map(item => {
//       if (
//         item.name === cartItem.name &&
//         item.price === cartItem.price &&
//         item.image === cartItem.image
//       ) {
//         return { ...item, quantity: item.quantity + 0 };
//       }
//       return item;
//     });

//     if (
//       !initialCart.some(
//         item =>
//           item.name === cartItem.name &&
//           item.price === cartItem.price &&
//           item.image === cartItem.image
//       )
//     ) {
//       initialCart = [...initialCart, cartItem];
//     }

//     return initialCart;
//   });

//   // Save the updated cart array to local storage whenever it changes
//   useEffect(() => {
//     localStorage.setItem('cartItems', JSON.stringify(updatedCart));
//   }, [updatedCart]);

//   const handleRemoveItem = (id) => {
//     // Filter out the item with the given ID
//     const updatedCartAfterRemoval = updatedCart.filter(item => item.id !== id);
//     setUpdatedCart(updatedCartAfterRemoval); // Update the state to trigger re-render with the updated cart
//     console.log('Removed item ID:', id, updatedCartAfterRemoval);
//   };

//   const handleIncrementQuantity = (id) => {
//     setUpdatedCart(prevCart => {
//       return prevCart.map(item => {
//         if (item.id === id) {
//           return { ...item, quantity: item.quantity + 1 };
//         }
//         return item;
//       });
//     });
//   };

//   const handleDecrementQuantity = (id) => {
//     setUpdatedCart(prevCart => {
//       return prevCart.map(item => {
//         if (item.id === id && item.quantity > 1) {
//           return { ...item, quantity: item.quantity - 1 };
//         }
//         return item;
//       });
//     });
//   };

//   const calculateTotalSum = () => {
//     let sum = 0;
//     updatedCart.forEach(item => {
//       sum += item.price * item.quantity;
//     });
//     return Number(sum.toFixed(2));
//   };

//   const totalSum = calculateTotalSum();
//   return (
//     <div className="container">
//       <h2>Cart Item</h2>
//       {updatedCart.map((item, index) => (
//         <div className="rowcart m-4 cart-box" key={index}>
//           <div className="col-md-6">
//             <div className="cart-img">
//               <img src={decodeURIComponent(item.image)} alt={item.name} />
//             </div>
//           </div>
//           <div className="col-md-6 m-4 cart-details">
//             <p><strong>Title:</strong> {item.name}</p>
//             <p><strong>Price:</strong> {item.price * item.quantity} rs</p>
//             <div className='mt-4'>
//               <button onClick={() => handleDecrementQuantity(item.id)} className='btn bg-danger'>-</button>
//               <span> {item.quantity} </span>
//               <button onClick={() => handleIncrementQuantity(item.id)} className='btn bg-primary '>+</button>
//             </div>
//             <button onClick={() => handleRemoveItem(item.id)} className='btn bg-primary mt-4'>Remove</button>
//           </div>
//         </div>
//       ))}
//         <div className="m-4 container totalsum-box">
//         <div>
//           {totalSum === 0 ? (
//             <p className='empty'>Cart is empty</p>
//           ) : (
//             <div>
//               <p><strong>Total sum:</strong> {totalSum.toFixed(2)} rs</p>
//             </div>
//           )}
//         </div>
//       </div>

//     </div>
//   );
// };

// export default AddToCart;
